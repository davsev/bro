<?php

/**
 * The plugin bootstrap file
 *
 * This file is read by WordPress to generate the plugin information in the plugin
 * admin area. This file also includes all of the dependencies used by the plugin,
 * registers the activation and deactivation functions, and defines a function
 * that starts the plugin.
 *
 * @link              https://cobweb-security.com
 * @since             1.0.0
 * @package           Cwis
 *
 * @wordpress-plugin
 * Plugin Name:       CWIS Antivirus Scanner
 * Plugin URI:        https://cobweb-security.com/pages/free-website-antivirus/
 * Description:       CWIS antivirus scanner is designed to detect trojans, viruses, malware and other threats within database content and files uploaded to your system.
 * Version:           3.3.9
 * Author:            CobWeb Security Ltd.
 * Author URI:        https://cobweb-security.com
 * Text Domain:       cwis-antivirus-malware-detected
 * Domain Path:       /languages
 */
// If this file is called directly, abort.
if (!defined('WPINC')) {
    die;
}

// Checks if Multisite is enabled.
if (!function_exists('is_multisite')) {

    function is_multisite()
    {
        if (defined('MULTISITE')) {
            return MULTISITE;
        }

        if (defined('SUBDOMAIN_INSTALL') || defined('VHOST') || defined('SUNRISE')) {
            return true;
        }

        return false;
    }

}

/**
 * The code that runs during plugin activation.
 * 
 * @since   3.0.1
 */
function activate_cwis()
{
    // Scheduling a recurring cron job every minute
    if (!wp_next_scheduled('cwis_scheduled_events')) {
        wp_schedule_event(time(), 'minutely', 'cwis_scheduled_events');
    }
}

/**
 * The code that runs during plugin uninstallation.
 * 
 * @since    2.3.0
 */
function uninstall_cwis()
{
    deactivate_cwis();

    // We can safely request filesystem credentials without any issues
    $creds = request_filesystem_credentials(site_url() . '/wp-admin/', '', false, false, array());

    // Initialize the API
    if (!WP_Filesystem($creds)) {
        return false;
    }

    global $wp_filesystem;

    // Get upload path
    $upload_dir = wp_upload_dir();
    $upload_path = $upload_dir['basedir'] . '/cwis';

    // Delete the temporary files directory
    $wp_filesystem->rmdir($upload_path, true);
}

/**
 * The code that runs during plugin deactivation or uninstallation.
 * 
 * @since    2.0.5
 */
function deactivate_cwis()
{
    // Unschedule deprecated cron hook
    wp_unschedule_event(wp_next_scheduled('cwis_cron_hook'), 'cwis_cron_hook');

    // Unschedule tasks
    $timestamp = wp_next_scheduled('cwis_scheduled_events');
    wp_unschedule_event($timestamp, 'cwis_scheduled_events');

    // Delete AJAX options
    delete_option('CWIS_AJAX_ID');
    delete_option('CWIS_AJAX_PASS');
    delete_option('CWIS_LAST_SCAN');
}

register_activation_hook(__FILE__, 'activate_cwis');
register_deactivation_hook(__FILE__, 'deactivate_cwis');
register_uninstall_hook(__FILE__, 'uninstall_cwis');

/**
 * The core plugin classes that is used to define admin-specific hooks.
 * Note: plugin_dir_path() introduced in WordPress 2.8.0
 */
require plugin_dir_path(__FILE__) . 'includes/class-cwis-foundation.php';
require plugin_dir_path(__FILE__) . 'includes/class-cwis.php';

/**
 * Begins execution of the plugin.
 *
 * Since everything within the plugin is registered via hooks,
 * then kicking off the plugin from this point in the file does
 * not affect the page life cycle.
 *
 * @since    1.0.0
 */
function run_cwis()
{
    $plugin = new Cwis('cwis', $version = '3.3.9');
    $plugin->run();
}

run_cwis();
